buildscript {
    dependencies {
        classpath group: 'cz.habarta.typescript-generator', name: 'typescript-generator-gradle-plugin', version: '2.36.1070'
    }
}

plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
}

apply plugin: 'cz.habarta.typescript-generator'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//  implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.postgresql:postgresql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

group = 'com.backend'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

tasks.named('test') {
    useJUnitPlatform()
}

generateTypeScript {
    classesWithAnnotations = [
            'com.backend.spades.model.TypeScriptGeneration',
            'com.backend.spades.dto.TypeScriptGeneration'
    ]
    jsonLibrary = 'jackson2'
    excludeClasses = ['org.springframework.data.jpa.domain.AbstractPersistable']
    optionalAnnotations = ['javax.annotation.Nullable']
    outputFile = "../spades-frontend/src/app/models/generated.ts"
    outputKind = 'module'
    outputFileType = 'implementationFile'
    sortDeclarations = true
    stringQuotes = 'singleQuotes'
    mapEnum = 'asEnum'
}